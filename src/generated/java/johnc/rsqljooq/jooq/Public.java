/*
 * This file is generated by jOOQ.
 */
package johnc.rsqljooq.jooq;


import johnc.rsqljooq.jooq.tables.Author;
import johnc.rsqljooq.jooq.tables.AuthorBook;
import johnc.rsqljooq.jooq.tables.Book;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 124788365;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.author</code>.
     */
    public final Author AUTHOR = johnc.rsqljooq.jooq.tables.Author.AUTHOR;

    /**
     * The table <code>public.author_book</code>.
     */
    public final AuthorBook AUTHOR_BOOK = johnc.rsqljooq.jooq.tables.AuthorBook.AUTHOR_BOOK;

    /**
     * The table <code>public.book</code>.
     */
    public final Book BOOK = johnc.rsqljooq.jooq.tables.Book.BOOK;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
                Author.AUTHOR,
                AuthorBook.AUTHOR_BOOK,
                Book.BOOK);
    }
}
